-Take the request (json) from Front, convert to java class, do ur preprocessing and make the request, recieve the result from database, convert to java class, 
do ur ranking, convert to json, send to front.

-When inserting documents in db, only insert URL and Document Text

- Add synchronized on all global variables for threads

-import org.tartarus.snowball.ext.EnglishStemmer;

-https://snowballstem.org/download.html

public class StemmingExample {
    public static void main(String[] args) {
        EnglishStemmer stemmer = new EnglishStemmer();
        String word = "running";
        stemmer.setCurrent(word);
        stemmer.stem();
        String stemmedWord = stemmer.getCurrent();
        System.out.println(stemmedWord);
    }
}

-Ranking in node by calculating priority= idf*tf (from db) before sending response.

-Remove Stop words during pre-processing

-Remove ThreadName and Number from database.

-Phrase Searching: if the request includes " " don't do preprocessing and search the entire document for the wanted word.

- Create a third collection for phrase searching where the whole document is stored but after some processing removing tags etc...

- Page Rank Library: Apache Commons Math